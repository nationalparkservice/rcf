% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pca_thresholds.R
\name{pca_thresholds}
\alias{pca_thresholds}
\title{Summarize threshold values by PCA and month, season, or year*}
\usage{
pca_thresholds(
  SiteID,
  pca_data = NULL,
  all_data = NULL,
  past_years = c(1950, 2000),
  future_year = 2040,
  summarize_by = "year",
  directory = tempdir()
)
}
\arguments{
\item{SiteID}{chosen name to use in file names, attributes, and directories. Default
name is "unnamed_site" (character)}

\item{pca_data}{The data that results from the \code{cf_pca} function (dataframe)}

\item{all_data}{The data that results from the \code{calc_thresholds} function (dataframe)}

\item{past_years}{years to base past data off of. Cannot be any earlier than 1950.
Must be written as c(past_start, past_end). Defaults to 1950:2000 (numeric)}

\item{future_year}{year to center changes from historical data around. Defaults to
2040 (numeric)}

\item{summarize_by}{how to summarize the data, options are "month", "season", "year"
Defaults to year.}

\item{directory}{where to save files to. Per CRAN guidelines, this
defaults to a temporary directory and files created will be lost after
R session ends. Specify a path to retain files.}
}
\value{
One (1) csv file that summarizes threshold values based on PCA and month/season/year
}
\description{
Summarizes threshold values calculated in the \code{calc_thresholds} function based on
PCA.
}
\details{
*For advanced users only.
}
\examples{
#' @examples
\dontrun{
# Generate sample data

data <- data.frame(
date = sample(seq(as.Date('1950/01/01'), as.Date('2099/12/31'), by="day"), 100),
yr = rep(c(1960, 1970, 1980, 1990, 2000, 2010, 2020, 2030, 2040, 2050), each = 10),
month = rep(c(1:10), each = 10),
quarter = rep(rep(c("DJF", "MAM", "JJA", "SON"), each = 25)),
gcm = paste0(rep(letters[1:5], each = 20),
rep(letters[1:20], each = 5),
rep(letters[20:26], each = 1)),
precip = rnorm(100),
tmin = rnorm(100),
tmax = rnorm(100),
rhmax = rnorm(100),
rhmin = rnorm(100),
tavg = rnorm(100)
heat_index = rnorm(100)
heat_index_ec = rnorm(100),
heat_index_dan = rnorm(100),
temp_over_95_pctl =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
temp_over_99_pctl =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
temp_over_95_pctl_length =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
temp_under_freeze =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
temp_under_freeze_length =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
temp_under_5_pctl =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
no_precip  =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
no_precip_length =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
precip_95_pctl =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
precip_99_pctl =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
precip_moderate =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
precip_heavy =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
freeze_thaw =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
gdd =  sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
gdd_count = rnorm(100),
not_gdd_count = rnorm(100),
frost = sample(x = c("TRUE","FALSE"), size = 100, replace = TRUE),
grow_length = rnorm(100)
)

pca_df <- data.frame(

)

pca_thresholds("SCBL", pca_data = pca_df, all_data = data, future_year = 2040,
summarize_by = "month", past_years = c(1950, 2000))
}

}
