% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pca_thresholds.R
\name{pca_thresholds}
\alias{pca_thresholds}
\title{Summarize threshold values by PCA and month, season, or year*}
\usage{
pca_thresholds(
  SiteID,
  pca_data = NULL,
  all_data = NULL,
  past_years = c(1950, 2000),
  future_year = 2040,
  summarize_by = "year",
  directory = tempdir()
)
}
\arguments{
\item{SiteID}{chosen name to use in file names, attributes, and directories. Default
name is "unnamed_site" (character)}

\item{pca_data}{The data that results from the \code{cf_pca} function (dataframe)}

\item{all_data}{The data that results from the \code{calc_thresholds} function (dataframe)}

\item{past_years}{years to base past data off of. Cannot be any earlier than 1950.
Must be written as c(past_start, past_end). Defaults to 1950:2000 (numeric)}

\item{future_year}{year to center changes from historical data around. Defaults to
2040 (numeric)}

\item{summarize_by}{how to summarize the data, options are "month", "season", "year"
Defaults to year.}

\item{directory}{where to save files to. Per CRAN guidelines, this
defaults to a temporary directory and files created will be lost after
R session ends. Specify a path to retain files.}
}
\value{
One (1) csv file that summarizes threshold values based on PCA and month/season/year
}
\description{
Summarizes threshold values calculated in the \code{calc_thresholds} function based on
PCA.
}
\details{
*For advanced users only.
}
\examples{
#' @examples
\dontrun{
# Generate sample data

data <- data.frame(
  date = sample(seq(as.Date('1950/01/01'), as.Date('2099/12/31'), by="day"), 1000),
  yr = rep(c(1980, 2040, 1980, 2040, 1980, 2040, 1980, 2040, 1980, 2040, 1980, 2040, 1980,
             2040, 1980, 2040, 1980, 2040, 1980, 2040), each = 50),
  gcm = rep(c("bcc-csm1-1.rcp45", "BNU-ESM.rcp45", "CanESM2.rcp85", "CCSM4.rcp45",
              "CSIRO-Mk3-6-0.rcp45"), each = 200),
  precip = rnorm(1000),
  tmin = rnorm(1000),
  tmax = rnorm(1000),
  rhmax = rnorm(1000),
  rhmin = rnorm(1000),
  tavg = rnorm(1000),
  heat_index = rnorm(1000),
  heat_index_ec = rnorm(1000),
  heat_index_dan = rnorm(1000),
  temp_over_95_pctl =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000, replace = TRUE)),
  temp_over_99_pctl =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000, replace = TRUE)),
  temp_over_95_pctl_length =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000,
                                                replace = TRUE)),
  temp_under_freeze =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000, replace = TRUE)),
  temp_under_freeze_length =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000,
                                                replace = TRUE)),
  temp_under_5_pctl =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000, replace = TRUE)),
  no_precip  =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000, replace = TRUE)),
  no_precip_length =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000, replace = TRUE)),
  precip_95_pctl =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000, replace = TRUE)),
  precip_99_pctl =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000, replace = TRUE)),
  precip_moderate =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000, replace = TRUE)),
  precip_heavy =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000, replace = TRUE)),
  freeze_thaw =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000, replace = TRUE)),
  gdd =  as.logical(sample(x = c("TRUE","FALSE"), size = 1000, replace = TRUE)),
  gdd_count = rnorm(1000),
  not_gdd_count = rnorm(1000),
  frost = as.logical(sample(x = c("TRUE","FALSE"), size = 1000, replace = TRUE)),
  grow_length = rnorm(1000),
  units = rep("imperial", each = 1000)
)

pca_data <- data.frame(
  gcm = c("bcc-csm1-1.rcp45", "BNU-ESM.rcp45", "CanESM2.rcp85", "CCSM4.rcp45",
          "CSIRO-Mk3-6-0.rcp45"),
  precip_change = rnorm(5),
  tmin_change = rnorm(5),
  tmax_change = rnorm(5),
  rhmax_change = rnorm(5),
  rhmin_change = rnorm(5),
  tavg_change = rnorm(5),
  heat_index_change = rnorm(5),
  heat_index_ec_change = rnorm(5),
  heat_index_dan_change = rnorm(5),
  temp_over_95_pctl_change =  rnorm(5),
  temp_over_99_pctl_change =  rnorm(5),
  temp_over_95_pctl_length_change =  rnorm(5),
  temp_under_freeze_change =  rnorm(5),
  temp_under_freeze_length_change =  rnorm(5),
  temp_under_5_pctl_change =  rnorm(5),
  no_precip_change  =  rnorm(5),
  no_precip_length_change =  rnorm(5),
  precip_95_pctl_change =  rnorm(5),
  precip_99_pctl_change =  rnorm(5),
  precip_moderate_change =  rnorm(5),
  precip_heavy_change =  rnorm(5),
  freeze_thaw_change =  rnorm(5),
  gdd_change =  rnorm(5),
  gdd_count_change = rnorm(5),
  not_gdd_count_change = rnorm(5),
  frost_change = rnorm(5),
  grow_length_change = rnorm(5),
  units = rep("imperial", each = 5),
  pca_type = c("PC1 Max", "PC1 Min", "PC2 Max", "PC2 Min", "NA"),
  cf = c("Hot Wet", "Hot Dry", "Warm Wet", "Warm Dry", "Central")
)

pca_thresholds("SCBL", pca_data = pca_data, all_data = data, future_year = 2040,
               summarize_by = "year", past_years = c(1950, 2000))
               }

}
